{"version":3,"file":"static/js/34.9cab8857.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/TrendingMovieItem/TrendingMoveItem.styled.js","components/pages/HomePage/HomePage.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","components/SearchMovieItem/SearchMovieItem.js","components/pages/MoviePage/MoviesPage.js","components/service/GetFormatData.js","components/service/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 15px 20px;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <WrapperLoader>\n      <Oval\n        arialLabel=\"loading-indicator\"\n        height={50}\n        width={50}\n        strokeWidth={5}\n        color=\"orange\"\n        secondaryColor=\"lightblue\"\n        textAlign=\"center\"\n      />\n    </WrapperLoader>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  padding: 10px;\n  max-width: 300px;\n  max-height: 550px;\n  list-style: none;\n  background: ${props => props.theme.colors.bgGrey};\n  border: 2px solid ${props => props.theme.colors.orange};\n  border-radius: 3%;\n  margin-bottom: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 3%;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  min-width: 300px;\n  height: 424px;\n`;\n\nexport const MovieName = styled.p`\n  padding: 10px;\n  margin: 10px 0 0 0;\n  height: 40px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding: 20px 0;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 36px;\n  line-height: 1.62;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 10px;\n  border-radius: 4px;\n  margin: 0;\n  padding: 20px 0;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n`;\n\nexport const TitleForm = styled.h2`\n  margin: 0;\n  padding: 20px 0;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 30px;\n  line-height: 1.62;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const InputForm = styled.input`\n  height: 20px;\n  width: 300px;\n  padding: 10px;\n  border: none;\n  border: 3px solid ${props => props.theme.colors.orange};\n  background-color: ${props => props.theme.colors.white};\n`;\n\nexport const ButtonForm = styled.button`\n  min-height: 45px;\n  min-width: 40px;\n  background-color: ${props => props.theme.colors.orange};\n  border: 1px solid ${props => props.theme.colors.borderColor};\n  box-shadow: ${props => props.theme.colors.boxShadowColor};\n  box-sizing: border-box;\n  color: ${props => props.theme.colors.baseColor};\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 5px;\n  text-align: center;\n  text-decoration: none;\n`;\n","import React, { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { Form, TitleForm, InputForm, ButtonForm } from './SearchForm.styled';\n\nexport default function SearchForm({ onSubmit }) {\n  const [movieName, setMovieName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      return toast.error(\n        `Sorry,there are no movie on request. Please try again`\n      );\n    }\n\n    onSubmit(movieName);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <TitleForm>Find movie by name</TitleForm>\n        <div>\n          <InputForm\n            autoComplete=\"off\"\n            placeholder=\"Enter a movie name\"\n            type=\"text\"\n            name=\"movieName\"\n            value={movieName}\n            onChange={e => setMovieName(e.target.value.toLowerCase())}\n          />\n          <ButtonForm type=\"submit\">Search</ButtonForm>\n        </div>\n      </Form>\n    </>\n  );\n}\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n} from 'components/TrendingMovieItem/TrendingMoveItem.styled';\n\nexport default function SearchMovieItem({ movie }) {\n  const location = useLocation();\n  const { id, title, poster_path } = movie;\n\n  return (\n    <MovieItem>\n      <MovieLink to={`${id}`} state={{ from: location }}>\n        <MovieImg src={poster_path} alt={title} />\n      </MovieLink>\n      <MovieName>{title}</MovieName>\n    </MovieItem>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport ApiService from 'components/service/movies-api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchMovieItem from 'components/SearchMovieItem/SearchMovieItem';\nimport { FormatMovie } from 'components/service/GetFormatData';\nimport Loader from 'components/Loader/Loader';\nimport { Container, MovieList } from '../HomePage/HomePage.styled';\n\nconst newApi = new ApiService();\n\nexport default function MoviesPages() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  searchParams.get('query');\n\n  useEffect(() => {\n    if (movieName) {\n      setLoading(true);\n      setTimeout(() => {\n        setMovies(null);\n        newApi\n          .fetchMovieForQuery(movieName)\n          .then(({ results }) => {\n            const formats = FormatMovie(results);\n            setMovies(formats);\n            setSearchParams({ query: movieName });\n            if (results.length === 0) {\n              setMovies(null);\n              toast.error(\n                `Sorry,there are no movie on request ${movieName}. Please try again`\n              );\n              return;\n            }\n          })\n          .catch(error => setError(error))\n          .finally(setLoading(false));\n      }, 100);\n    }\n  }, [movieName, setSearchParams]);\n\n  const handleFormSubmit = name => {\n    setMovieName(name);\n  };\n\n  return (\n    <>\n      {<SearchForm onSubmit={handleFormSubmit} />}\n      {loading && <Loader />}\n      <Container>\n        <MovieList>\n          {!loading &&\n            movies &&\n            movies.map(movie => (\n              <SearchMovieItem key={movie.id} movie={movie} />\n            ))}\n        </MovieList>\n      </Container>\n      {!loading && error && (\n        <div>Sorry, there was an error, please try again</div>\n      )}\n    </>\n  );\n}\n","export function FormatMovie(movie) {\n  if (movie) {\n    return movie.map(res => ({\n      id: res.id,\n      title: res.title,\n      poster_path: res.poster_path\n        ? `https://image.tmdb.org/t/p/w300/${res.poster_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    }));\n  }\n}\n\nexport function FormatCast(actors) {\n  if (actors) {\n    return actors.map(res => ({\n      id: res.id,\n      name: res.name,\n      profile_path: res.profile_path\n        ? `https://image.tmdb.org/t/p/w300/${res.profile_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n      character: res.character,\n    }));\n  }\n}\n\nexport function FormatMovieDetailsPage({\n  id,\n  title,\n  poster_path,\n  vote_average,\n  overview,\n  genres,\n}) {\n  const movie = {\n    id: id,\n    title: title,\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n      : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    vote_average: vote_average * 10,\n    overview: overview,\n    genres: genres,\n  };\n  return movie;\n}\n","import axios from 'axios';\nconst API_KEY = 'd16c53a3a4d5eb154f379745597d6181';\nconst baseURL = 'https://api.themoviedb.org';\n\nexport default class ApiService {\n  constructor() {\n    this.page = 1;\n  }\n  async fetchTrendingMovies() {\n    const response = await axios.get(\n      `${baseURL}/3/trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieForQuery(searchValue) {\n    const response = await axios.get(\n      `${baseURL}/3/search/movie?api_key=${API_KEY}&page=${this.page}&query=${searchValue}&language=en-US&include_adult=false`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieDetails(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n\n  async fetchMovieActors(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  pageAdd() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchValue;\n  }\n\n  set query(newValue) {\n    this.searchValue = newValue;\n  }\n}\n"],"names":["WrapperLoader","styled","Loader","arialLabel","height","width","strokeWidth","color","secondaryColor","textAlign","MovieItem","props","theme","colors","bgGrey","orange","MovieLink","Link","MovieImg","MovieName","baseColor","Container","Title","MovieList","Form","TitleForm","InputForm","white","ButtonForm","borderColor","boxShadowColor","SearchForm","onSubmit","useState","movieName","setMovieName","e","preventDefault","trim","toast","autoComplete","placeholder","type","name","value","onChange","target","toLowerCase","SearchMovieItem","movie","location","useLocation","id","title","poster_path","to","state","from","src","alt","newApi","ApiService","MoviesPages","useSearchParams","searchParams","setSearchParams","movies","setMovies","loading","setLoading","error","setError","get","useEffect","setTimeout","fetchMovieForQuery","then","results","formats","FormatMovie","query","length","catch","finally","map","res","FormatCast","actors","profile_path","character","FormatMovieDetailsPage","vote_average","overview","genres","API_KEY","baseURL","this","page","axios","response","data","searchValue","movieId","newValue"],"sourceRoot":""}