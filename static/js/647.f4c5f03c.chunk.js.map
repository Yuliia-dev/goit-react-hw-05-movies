{"version":3,"file":"static/js/647.f4c5f03c.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieDetailsPageMarkup/MovieDetailsPageMarkup.styled.js","components/MovieDetailsPageMarkup/MovieDetailsPageMarkup.js","components/pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/pages/MovieDetailsPage/MovieDetailsPage.js","components/service/GetFormatData.js","components/service/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 15px 20px;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <WrapperLoader>\n      <Oval\n        arialLabel=\"loading-indicator\"\n        height={50}\n        width={50}\n        strokeWidth={5}\n        color=\"orange\"\n        secondaryColor=\"lightblue\"\n        textAlign=\"center\"\n      />\n    </WrapperLoader>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContainerSection = styled.section`\n  padding: 0 20px;\n`;\n\nexport const CardMovie = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 15px 20px;\n`;\n\nexport const MovieImg = styled.img`\n  min-width: 300px;\n  height: 424px;\n  margin-right: 20px;\n  border-radius: 3%;\n  overflow: hidden;\n`;\n\nexport const MovieName = styled.h2`\n  margin: 0;\n  padding: 5px 0;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 30px;\n  line-height: 1, 2;\n  letter-spacing: 0.02em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const MovieClause = styled.h3`\n  margin: 0;\n  padding: 5px 0;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const MovieInfo = styled.p`\n  margin: 0;\n  padding: 5px 10px;\n  font-style: italic;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 5px 10px;\n  font-style: italic;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n`;\n\nexport const GenresItem = styled.li`\n  display: flex;\n  list-style: none;\n  padding: 0 5px;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin: 15px 0;\n  padding: 5px 0;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 30px;\n  line-height: 1, 2;\n  letter-spacing: 0.02em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 5px 10px;\n`;\nexport const InfoItem = styled.li`\n  padding: 15px;\n  margin-right: 5px;\n  list-style: none;\n  min-height: 20px;\n  min-width: 120px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  text-align: center;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const InfoLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 3%;\n  overflow: hidden;\n  text-decoration: none;\n  cursor: pointer;\n  color: ${props => props.theme.colors.white};\n  font-style: italic;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: 0.02em;\n\n  &.active {\n    color: ${props => props.theme.colors.orange};\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ContainerSection,\n  CardMovie,\n  MovieImg,\n  MovieName,\n  MovieClause,\n  MovieInfo,\n  GenresList,\n  GenresItem,\n  InfoContainer,\n  InfoTitle,\n  InfoList,\n  InfoItem,\n  InfoLink,\n} from './MovieDetailsPageMarkup.styled';\n\nexport default function MovieDetailsPageMarkup({ movie }) {\n  const { title, poster_path, vote_average, overview, genres } = movie;\n\n  return (\n    <ContainerSection>\n      <CardMovie>\n        <MovieImg src={poster_path} alt={title} height=\"500\" width=\"300\" />\n        <div>\n          <MovieName> {title}</MovieName>\n          <MovieClause>User Score: </MovieClause>\n          <MovieInfo>{vote_average}%</MovieInfo>\n          <MovieClause>Overview:</MovieClause>\n          <MovieInfo>{overview}</MovieInfo>\n          <MovieClause>Genres:</MovieClause>\n          <GenresList>\n            {genres.map(({ id, name }) => {\n              return <GenresItem key={id}>{name}</GenresItem>;\n            })}\n          </GenresList>\n        </div>\n      </CardMovie>\n      <InfoContainer>\n        <InfoTitle>Additional information</InfoTitle>\n        <div>\n          <InfoList>\n            <InfoItem>\n              <InfoLink to=\"cast\">Actors</InfoLink>\n            </InfoItem>\n            <InfoItem>\n              <InfoLink to=\"reviews\">Reviews</InfoLink>\n            </InfoItem>\n          </InfoList>\n        </div>\n      </InfoContainer>\n\n      <Outlet />\n    </ContainerSection>\n  );\n}\n\nMovieDetailsPageMarkup.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  margin-left: 20px;\n  align-items: center;\n  appearance: none;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 48px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 18px;\n`;\nexport const ContainerError = styled.p`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  margin: 0;\n  padding: 20px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 36px;\n  line-height: 1.62;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.orange};\n`;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ApiService from 'components/service/movies-api';\nimport { FormatMovieDetailsPage } from '../../service/GetFormatData';\nimport MovieDetailsPageMarkup from 'components/MovieDetailsPageMarkup/MovieDetailsPageMarkup';\nimport Loader from 'components/Loader/Loader';\nimport { BackLink, ContainerError } from './MovieDetailsPage.styled';\n\nconst newApi = new ApiService();\n\nexport default function MovieDetailsPages() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      newApi\n        .fetchMovieDetails(movieId)\n        .then(results => {\n          const formats = FormatMovieDetailsPage(results);\n          setMovie(formats);\n        })\n        .catch(error => setError(error))\n        .finally(setLoading(false));\n    }, 100);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <BackLink to={location?.state?.from ?? '/'}>⬅Back</BackLink>\n      {!loading && movie && <MovieDetailsPageMarkup movie={movie} />}\n      {!loading && error && (\n        <ContainerError>\n          Sorry, there was an error, please try again\n        </ContainerError>\n      )}\n    </>\n  );\n}\n","export function FormatMovie(movie) {\n  if (movie) {\n    return movie.map(res => ({\n      id: res.id,\n      title: res.title,\n      poster_path: res.poster_path\n        ? `https://image.tmdb.org/t/p/w300/${res.poster_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    }));\n  }\n}\n\nexport function FormatCast(actors) {\n  if (actors) {\n    return actors.map(res => ({\n      id: res.id,\n      name: res.name,\n      profile_path: res.profile_path\n        ? `https://image.tmdb.org/t/p/w300/${res.profile_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n      character: res.character,\n    }));\n  }\n}\n\nexport function FormatMovieDetailsPage({\n  id,\n  title,\n  poster_path,\n  vote_average,\n  overview,\n  genres,\n}) {\n  const movie = {\n    id: id,\n    title: title,\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n      : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    vote_average: vote_average * 10,\n    overview: overview,\n    genres: genres,\n  };\n  return movie;\n}\n","import axios from 'axios';\nconst API_KEY = 'd16c53a3a4d5eb154f379745597d6181';\nconst baseURL = 'https://api.themoviedb.org';\n\nexport default class ApiService {\n  constructor() {\n    this.page = 1;\n  }\n  async fetchTrendingMovies() {\n    const response = await axios.get(\n      `${baseURL}/3/trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieForQuery(searchValue) {\n    const response = await axios.get(\n      `${baseURL}/3/search/movie?api_key=${API_KEY}&page=${this.page}&query=${searchValue}&language=en-US&include_adult=false`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieDetails(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n\n  async fetchMovieActors(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  pageAdd() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchValue;\n  }\n\n  set query(newValue) {\n    this.searchValue = newValue;\n  }\n}\n"],"names":["WrapperLoader","styled","Loader","arialLabel","height","width","strokeWidth","color","secondaryColor","textAlign","ContainerSection","CardMovie","MovieImg","MovieName","props","theme","colors","baseColor","MovieClause","MovieInfo","GenresList","GenresItem","InfoContainer","InfoTitle","InfoList","InfoItem","InfoLink","NavLink","white","orange","MovieDetailsPageMarkup","movie","title","poster_path","vote_average","overview","genres","src","alt","map","id","name","to","BackLink","Link","ContainerError","newApi","ApiService","MovieDetailsPages","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","useEffect","setTimeout","fetchMovieDetails","then","results","formats","FormatMovieDetailsPage","catch","finally","state","from","FormatMovie","res","FormatCast","actors","profile_path","character","API_KEY","baseURL","this","page","axios","response","data","searchValue","newValue"],"sourceRoot":""}