{"version":3,"file":"static/js/14.fbe3c1e1.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/TrendingMovieItem/TrendingMoveItem.styled.js","components/TrendingMovieItem/TrendingMovieItem.js","pages/HomePage/HomePage.js","pages/HomePage/HomePage.styled.js","service/GetFormatData.js","service/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 15px 20px;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <WrapperLoader>\n      <Oval\n        arialLabel=\"loading-indicator\"\n        height={50}\n        width={50}\n        strokeWidth={5}\n        color=\"orange\"\n        secondaryColor=\"lightblue\"\n        textAlign=\"center\"\n      />\n    </WrapperLoader>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  padding: 10px;\n  max-width: 300px;\n  max-height: 550px;\n  list-style: none;\n  background: ${props => props.theme.colors.bgGrey};\n  border: 2px solid ${props => props.theme.colors.orange};\n  border-radius: 3%;\n  margin-bottom: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 3%;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  min-width: 300px;\n  height: 424px;\n`;\n\nexport const MovieName = styled.p`\n  padding: 10px;\n  margin: 10px 0 0 0;\n  height: 40px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n} from './TrendingMoveItem.styled';\n\nexport default function TrendingMovieItem({ movie }) {\n  const location = useLocation();\n  const { id, title, poster_path } = movie;\n\n  return (\n    <MovieItem>\n      <MovieLink to={`movies/${id}`} state={{ from: location }}>\n        <MovieImg src={poster_path} alt={title} width=\"300\" />\n      </MovieLink>\n      <MovieName>{title}</MovieName>\n    </MovieItem>\n  );\n}\n\nTrendingMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport ApiService from '../../service/movies-api';\nimport TrendingMovieItem from '../../components/TrendingMovieItem/TrendingMovieItem';\nimport { FormatMovie } from '../../service/GetFormatData';\nimport Loader from '../../components/Loader/Loader';\nimport { Container, Title, MovieList, ContainerError } from './HomePage.styled';\n\nconst newApi = new ApiService();\n\nexport default function HomePages() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    newApi\n      .fetchTrendingMovies()\n      .then(({ results }) => {\n        const formats = FormatMovie(results);\n        setMovies(formats);\n      })\n      .catch(error => setError(error))\n      .finally(setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Title>Trending today</Title>\n        {loading && <Loader />}\n        <MovieList>\n          {movies &&\n            movies.map(movie => (\n              <TrendingMovieItem key={movie.id} movie={movie} />\n            ))}\n        </MovieList>\n      </Container>\n      {!loading && error && (\n        <ContainerError>\n          Sorry, there was an error, please try again\n        </ContainerError>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding: 20px 0;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 36px;\n  line-height: 1.62;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.baseColor};\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 10px;\n  border-radius: 4px;\n  margin: 0;\n  padding: 20px 0;\n`;\nexport const ContainerError = styled.p`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  margin: 0;\n  padding: 20px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 36px;\n  line-height: 1.62;\n  letter-spacing: 0.06em;\n  color: ${props => props.theme.colors.orange};\n`;\n","export function FormatMovie(movie) {\n  if (movie) {\n    return movie.map(res => ({\n      id: res.id,\n      title: res.title,\n      poster_path: res.poster_path\n        ? `https://image.tmdb.org/t/p/w300/${res.poster_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    }));\n  }\n}\n\nexport function FormatCast(actors) {\n  if (actors) {\n    return actors.map(res => ({\n      id: res.id,\n      name: res.name,\n      profile_path: res.profile_path\n        ? `https://image.tmdb.org/t/p/w300/${res.profile_path}`\n        : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n      character: res.character,\n    }));\n  }\n}\n\nexport function FormatMovieDetailsPage({\n  id,\n  title,\n  poster_path,\n  vote_average,\n  overview,\n  genres,\n}) {\n  const movie = {\n    id: id,\n    title: title,\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n      : 'https://webhostingmedia.net/wp-content/uploads/2018/01/http-error-404-not-found.png',\n    vote_average: vote_average * 10,\n    overview: overview,\n    genres: genres,\n  };\n  return movie;\n}\n","import axios from 'axios';\nconst API_KEY = 'd16c53a3a4d5eb154f379745597d6181';\nconst baseURL = 'https://api.themoviedb.org';\n\nexport default class ApiService {\n  constructor() {\n    this.page = 1;\n  }\n  async fetchTrendingMovies() {\n    const response = await axios.get(\n      `${baseURL}/3/trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieForQuery(searchValue) {\n    const response = await axios.get(\n      `${baseURL}/3/search/movie?api_key=${API_KEY}&page=${this.page}&query=${searchValue}&language=en-US&include_adult=false`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieDetails(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n\n  async fetchMovieActors(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${this.page}`\n    );\n    // console.log(response.data);\n    return response.data;\n  }\n\n  pageAdd() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchValue;\n  }\n\n  set query(newValue) {\n    this.searchValue = newValue;\n  }\n}\n"],"names":["WrapperLoader","styled","Loader","arialLabel","height","width","strokeWidth","color","secondaryColor","textAlign","MovieItem","props","theme","colors","bgGrey","orange","MovieLink","Link","MovieImg","MovieName","baseColor","TrendingMovieItem","movie","location","useLocation","id","title","poster_path","to","state","from","src","alt","newApi","ApiService","HomePages","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchTrendingMovies","then","results","formats","FormatMovie","catch","finally","map","Container","Title","MovieList","ContainerError","res","FormatCast","actors","name","profile_path","character","FormatMovieDetailsPage","vote_average","overview","genres","API_KEY","baseURL","this","page","axios","response","data","searchValue","movieId","newValue"],"sourceRoot":""}